.. include:: _contributors.rst

.. currentmodule:: sklearn

.. _changes_0_21:

Version 0.21.0
==============

**In development**

Changed models
--------------

The following estimators and functions, when fit with the same data and
parameters, may produce different models from the previous version. This often
occurs due to changes in the modelling logic (bug fixes or enhancements), or in
random sampling procedures.

- :class:`linear_model.BayesianRidge` |Fix|
- Decision trees and derived ensembles when both `max_depth` and
  `max_leaf_nodes` are set. |Fix|
- :class:`linear_model.LogisticRegression` and
  :class:`linear_model.LogisticRegressionCV` with 'saga' solver. |Fix|
- :class:`ensemble.GradientBoostingClassifier` for multiclass
  classification. |Fix|

Details are listed in the changelog below.

(While we are trying to better inform users by providing this information, we
cannot assure that this list is complete.)

Changelog
---------

Support for Python 3.4 and below has been officially dropped.

..
    See version doc/whats_new/v0.20.rst for structure. Entries should be
    prefixed with one of the labels: |MajorFeature|, |Feature|, |Efficiency|,
    |Enhancement|, |Fix| or |API|. They should be under a heading for the
    relevant module (or *Multiple Modules* or *Miscellaneous*), and within each
    section should be ordered according to the label ordering above. Entries
    should end with: :issue:`123456` by :user:`Joe Bloggs <joeongithub>`.

:mod:`sklearn.cluster`
- |Feature| Added the :func:`metrics.max_error` metric and a corresponding
  ``'max_error'`` scorer for single output regression.
  :issue:`12232` by :user:`Krishna Sangeeth <whiletruelearn>`.

- |Feature| Add :func:`metrics.multilabel_confusion_matrix`, which calculates a
  confusion matrix with true positive, false positive, false negative and true
  negative counts for each class. This facilitates the calculation of set-wise
  metrics such as recall, specificity, fall out and miss rate.
  :issue:`11179` by :user:`Shangwu Yao <ShangwuYao>` and `Joel Nothman`_.

- |Enhancement| Use label `accuracy` instead of `micro-average` on
  :func:`metrics.classification_report` to avoid confusion. `micro-average` is
  only shown for multi-label or multi-class with a subset of classes because
  it is otherwise identical to accuracy.
  :issue:`12334` by :user:`Emmanuel Arias <eamanu@eamanu.com>`,
  `Joel Nothman`_ and `Andreas Müller`_

- |API| The parameter ``labels`` in :func:`metrics.hamming_loss` is deprecated
  in version 0.21 and will be removed in version 0.23.
  :issue:`10580` by :user:`Reshama Shaikh <reshamas>` and `Sandra
  Mitrovic <SandraMNE>`.

- |Fix| The metric :func:`metrics.r2_score` is degenerate with a single sample
  and now it returns NaN and raises :class:`exceptions.UndefinedMetricWarning`.
  :issue:`12855` by :user:`Pawel Sendyk <psendyk>.`

:mod:`sklearn.model_selection`
..............................

- |Feature| Classes :class:`~model_selection.GridSearchCV` and
  :class:`~model_selection.RandomSearchCV` now allow for refit=callable
  to add flexibility in identifying the best
  estimator. An example for this interface has been added.
  :issue:`11354` by :user:`Wenhao Zhang <wenhaoz@ucla.edu>`,
  `Joel Nothman`_ and `Adrin Jalali`_

- |Enhancement| Classes :class:`~model_selection.GridSearchCV`,
  :class:`~model_selection.RandomizedSearchCV`, and methods
  :func:`~model_selection.cross_val_score`,
  :func:`~model_selection.cross_val_predict`,
  :func:`~model_selection.cross_validate`, now print train scores when
  `return_train_scores` is True and `verbose` > 2. For
  :func:`~model_selection.learning_curve`, and
  :func:`~model_selection.validation_curve` only the latter is required.
  :issue:`12613` and :issue:`12669` by :user:`Marc Torrellas <marctorrellas>`.

:mod:`sklearn.neighbors`
........................

- |API| Methods in :class:`neighbors.NearestNeighbors` :
  :func:`~neighbors.NearestNeighbors.kneighbors`,
  :func:`~neighbors.NearestNeighbors.radius_neighbors`,
  :func:`~neighbors.NearestNeighbors.kneighbors_graph`,
  :func:`~neighbors.NearestNeighbors.radius_neighbors_graph`
  now raise ``NotFittedError``, rather than ``AttributeError``,
  when called before ``fit`` :issue:`12279` by :user:`Krishna Sangeeth
  <whiletruelearn>`.

:mod:`sklearn.pipeline`
.......................

- |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a
  transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.

:mod:`sklearn.preprocessing`
............................

- |Efficiency| Make :class:`preprocessing.MultiLabelBinarizer` to cache class
  mappings instead of calculating it every time on the fly.
  :issue:`12116` by :user:`Ekaterina Krivich <kiote>` and `Joel Nothman`_.

- |Efficiency| :class:`preprocessing.PolynomialFeatures` now supports compressed
  sparse row (CSR) matrices as input for degrees 2 and 3. This is typically much
  faster than the dense case as it scales with matrix density and expansion degree
  (on the order of density^degree), and is much, much faster than the compressed
  sparse column (CSC) case. :issue:`12197` by :user:`Andrew Nystrom <awnystrom>`.

- |Efficiency| |API| Speed improvement in :class:`preprocessing.PolynomialFeatures`,
  in the dense case. Also added a new parameter ``order`` which controls output
  order for further speed performances. :issue:`12251` by `Tom Dupre la Tour`_.

:mod:`sklearn.tree`
...................
- |Feature| Decision Trees can now be plotted with matplotlib using
  :func:`tree.plot_tree` without relying on the ``dot`` library,
  removing a hard-to-install dependency. :issue:`8508` by `Andreas Müller`_.

- |Feature| ``get_n_leaves()`` and ``get_depth()`` have been added to
  :class:`tree.BaseDecisionTree` and consequently all estimators based
  on it, including :class:`tree.DecisionTreeClassifier`,
  :class:`tree.DecisionTreeRegressor`, :class:`tree.ExtraTreeClassifier`,
  and :class:`tree.ExtraTreeRegressor`.
  :issue:`12300` by :user:`Adrin Jalali <adrinjalali>`.

- |Fix| Fixed an issue with :class:`tree.BaseDecisionTree`
  and consequently all estimators based
  on it, including :class:`tree.DecisionTreeClassifier`,
  :class:`tree.DecisionTreeRegressor`, :class:`tree.ExtraTreeClassifier`,
  and :class:`tree.ExtraTreeRegressor`, where they used to exceed the given
  ``max_depth`` by 1 while expanding the tree if ``max_leaf_nodes`` and
  ``max_depth`` were both specified by the user. Please note that this also
  affects all ensemble methods using decision trees.
  :issue:`12344` by :user:`Adrin Jalali <adrinjalali>`.


:mod:`sklearn.linear_model`
...........................

- |Fix| Fixed the posterior mean, posterior covariance and returned
  regularization parameters in :class:`linear_model.BayesianRidge`. The
  posterior mean and the posterior covariance were not the ones computed
  with the last update of the regularization parameters and the returned
  regularization parameters were not the final ones. Also fixed the formula of
  the log marginal likelihood used to compute the score when
  `compute_score=True`. :issue:`12174` by
  :user:`Albert Thomas <albertcthomas>`.

Multiple modules
................

- The `__repr__()` method of all estimators (used when calling
  `print(estimator)`) has been entirely re-written, building on Python's
  pretty printing standard library. All parameters are printed by default,
  but this can be altered with the ``print_changed_only`` option in
  :func:`sklearn.set_config`. :issue:`11705` by :user:`Nicolas Hug
  <NicolasHug>`.

Changes to estimator checks
---------------------------

These changes mostly affect library developers.

- Add ``check_fit_idempotent`` to
  :func:`~utils.estimator_checks.check_estimator`, which checks that
  when `fit` is called twice with the same data, the ouput of
  `predict`, `predict_proba`, `transform`, and `decision_function` does not
  change. :issue:`12328` by :user:`Nicolas Hug <NicolasHug>`
